{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\User\\\\WebstormProjects\\\\personal-React_JS-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:\\\\Users\\\\User\\\\WebstormProjects\\\\personal-React_JS-Website\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbsorberInstance = void 0;\n\nvar Utils_1 = require(\"../../Utils\");\n\nvar AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n\n    var _a, _b;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position;\n    this.options = options;\n    var size = options.size.value * container.retina.pixelRatio;\n    var random = typeof options.size.random === \"boolean\" ? options.size.random : options.size.random.enable;\n    var minSize = typeof options.size.random === \"boolean\" ? 1 : options.size.random.minimumValue;\n\n    if (random) {\n      size = Utils_1.Utils.randomInRange(minSize, size);\n    }\n\n    this.opacity = this.options.opacity;\n    this.size = size * container.retina.pixelRatio;\n    this.mass = this.size * options.size.density;\n    var limit = options.size.limit;\n    this.limit = limit !== undefined ? limit * container.retina.pixelRatio : limit;\n    var color = typeof options.color === \"string\" ? {\n      value: options.color\n    } : options.color;\n    this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n  }\n\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var pos = particle.getPosition();\n\n      var _Utils_1$Utils$getDis = Utils_1.Utils.getDistances(this.position, pos),\n          dx = _Utils_1$Utils$getDis.dx,\n          dy = _Utils_1$Utils$getDis.dy,\n          distance = _Utils_1$Utils$getDis.distance;\n\n      var angle = Math.atan2(dx, dy) * (180 / Math.PI);\n      var acceleration = this.mass / Math.pow(distance, 2);\n\n      if (distance < this.size + particle.size.value) {\n        var sizeFactor = particle.size.value * 0.033;\n\n        if (this.size > particle.size.value && distance < this.size - particle.size.value) {\n          particle.destroy();\n        } else {\n          particle.size.value -= sizeFactor;\n          particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n          particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n        }\n\n        if (this.limit === undefined || this.size < this.limit) {\n          this.size += sizeFactor;\n        }\n\n        this.mass += sizeFactor * this.options.size.density;\n      } else {\n        particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n        particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var _a;\n\n      var container = this.container;\n      var percentPosition = (_a = this.options.position) !== null && _a !== void 0 ? _a : {\n        x: Math.random() * 100,\n        y: Math.random() * 100\n      };\n      return {\n        x: percentPosition.x / 100 * container.canvas.size.width,\n        y: percentPosition.y / 100 * container.canvas.size.height\n      };\n    }\n  }]);\n\n  return AbsorberInstance;\n}();\n\nexports.AbsorberInstance = AbsorberInstance;","map":{"version":3,"sources":["C:/Users/User/WebstormProjects/personal-React_JS-Website/node_modules/tsparticles/dist/Plugins/Absorbers/AbsorberInstance.js"],"names":["Object","defineProperty","exports","value","AbsorberInstance","Utils_1","require","absorbers","container","options","position","_a","_b","initialPosition","size","retina","pixelRatio","random","enable","minSize","minimumValue","Utils","randomInRange","opacity","mass","density","limit","undefined","color","ColorUtils","colorToRgb","b","g","r","calcPosition","particle","pos","getPosition","getDistances","dx","dy","distance","angle","Math","atan2","PI","acceleration","pow","sizeFactor","destroy","velocity","horizontal","sin","vertical","cos","isPointInside","canvas","context","translate","x","y","beginPath","arc","closePath","fillStyle","getStyleFromRgb","fill","percentPosition","width","height"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbsorberInstance = void 0;\nconst Utils_1 = require(\"../../Utils\");\nclass AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position;\n        this.options = options;\n        let size = options.size.value * container.retina.pixelRatio;\n        const random = typeof options.size.random === \"boolean\" ? options.size.random : options.size.random.enable;\n        const minSize = typeof options.size.random === \"boolean\" ? 1 : options.size.random.minimumValue;\n        if (random) {\n            size = Utils_1.Utils.randomInRange(minSize, size);\n        }\n        this.opacity = this.options.opacity;\n        this.size = size * container.retina.pixelRatio;\n        this.mass = this.size * options.size.density;\n        const limit = options.size.limit;\n        this.limit = limit !== undefined ? limit * container.retina.pixelRatio : limit;\n        const color = typeof options.color === \"string\" ? { value: options.color } : options.color;\n        this.color = (_a = Utils_1.ColorUtils.colorToRgb(color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_b = this.initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n    }\n    attract(particle) {\n        const pos = particle.getPosition();\n        const { dx, dy, distance } = Utils_1.Utils.getDistances(this.position, pos);\n        const angle = Math.atan2(dx, dy) * (180 / Math.PI);\n        const acceleration = this.mass / Math.pow(distance, 2);\n        if (distance < this.size + particle.size.value) {\n            const sizeFactor = particle.size.value * 0.033;\n            if (this.size > particle.size.value && distance < this.size - particle.size.value) {\n                particle.destroy();\n            }\n            else {\n                particle.size.value -= sizeFactor;\n                particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n                particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n            }\n            if (this.limit === undefined || this.size < this.limit) {\n                this.size += sizeFactor;\n            }\n            this.mass += sizeFactor * this.options.size.density;\n        }\n        else {\n            particle.velocity.horizontal += Math.sin(angle * (Math.PI / 180)) * acceleration;\n            particle.velocity.vertical += Math.cos(angle * (Math.PI / 180)) * acceleration;\n        }\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && Utils_1.Utils.isPointInside(initialPosition, this.container.canvas.size)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = Utils_1.ColorUtils.getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    calcPosition() {\n        var _a;\n        const container = this.container;\n        const percentPosition = (_a = this.options.position) !== null && _a !== void 0 ? _a : {\n            x: Math.random() * 100,\n            y: Math.random() * 100,\n        };\n        return {\n            x: (percentPosition.x / 100) * container.canvas.size.width,\n            y: (percentPosition.y / 100) * container.canvas.size.height,\n        };\n    }\n}\nexports.AbsorberInstance = AbsorberInstance;\n"]},"metadata":{},"sourceType":"script"}